use std::env;
use std::fs::File;
use std::io::{self, BufRead};
use std::path::Path;

fn main() {

    let args: Vec<String> = env::args().collect();

    let file_path1 = &args[1];
    let file_path2 = &args[2];
    
    // Leggi il numero dal file
    let num1 = match read_number_from_file(file_path1) {
        Ok(number) => number,
        Err(_e) => std::process::exit(0),
    };

    let num2 = match read_number_from_file(file_path2) {
        Ok(number) => number,
        Err(_e) => std::process::exit(0),
    };

    println!("{}", num1+num2);
}

fn read_number_from_file<P>(filename: P) -> io::Result<i32>
where
    P: AsRef<Path>,
{
    let file = File::open(filename)?;
    let mut lines = io::BufReader::new(file).lines();
    if let Some(Ok(line)) = lines.next() {
        return line.trim().parse().map_err(|e| io::Error::new(io::ErrorKind::InvalidData, e));
    }
    Err(io::Error::new(io::ErrorKind::UnexpectedEof, "File is empty"))
}
